# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python
# default Pipelines YAML template for Python, modifed by jtmoon79

trigger:
- master
- azure-pipelines
jobs:
  - job: Pythons_Ubuntu
    pool:
      vmImage: 'ubuntu-16.04'
    strategy:
      matrix:
        Python35:  # python -m twine check fails
          python.version: '3.5'
        Python36:
          python.version: '3.6'
        Python37:
          python.version: '3.7'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Python $(python.version)'
    - task: Bash@3
      inputs:
        filePath: '.azure-pipelines/build-install-run.sh'
  - job: Pythons_Windows
    pool:
      vmImage: 'vs2017-win2016'
    strategy:
      matrix:
        Python35:
          python.version: '3.5'
        Python36:
          python.version: '3.6'
        Python37:
          python.version: '3.7'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Python $(python.version)'
    - task: PowerShell@2
      inputs:
        filePath: '.azure-pipelines/build-install-run.ps1'
  - job: Pythons_MacOSX
    pool:
      vmImage: 'macOS-10.14'
    strategy:
      matrix:
        Python35:
          python.version: '3.5'
        Python36:
          python.version: '3.6'
        Python37:
          python.version: '3.7'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Python $(python.version)'
    - task: Bash@3
      inputs:
        filePath: '.azure-pipelines/build-install-run.sh'
