# CircleCI 2.0 configuration file
# source: https://circleci.com/gh/jtmoon79/goto_http_redirect_server/tree/master
#
# YAML Schema from
# https://circleci.com/docs/2.0/configuration-reference/
# (http://archive.fo/y0dxX)
# CircleCI image list
# https://circleci.com/docs/2.0/circleci-images/ (http://archive.fo/z2SyE)
---
version: 2.1
jobs:
  build_install_run__circleci_python_3_5:
    docker:
      - image: circleci/python:3.5
    steps:
      - checkout
      - run:
          name: build, install, and run in Python 3.5
          command: |
            set -ex
            # force +x
            chmod -v +x -- ./tools/pkg-update.sh ./tools/pkg-install.sh ./.circleci/build-install-run.sh
            ./tools/pkg-update.sh
            ./tools/pkg-install.sh curl  # for server-test.sh
            ./.circleci/build-install-run.sh
  build_install_run__circleci_python_3_6:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run:
          name: build, install, and run in Python 3.6
          command: |
            set -ex
            # force +x
            chmod -v +x -- ./tools/pkg-update.sh ./tools/pkg-install.sh ./.circleci/build-install-run.sh
            ./tools/pkg-update.sh
            ./tools/pkg-install.sh curl  # for server-test.sh
            ./.circleci/build-install-run.sh
  build_install_run__circleci_python_3_7:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: build, install, and run in Python 3.7
          command: |
            set -ex
            # force +x
            chmod -v +x -- ./tools/pkg-update.sh ./tools/pkg-install.sh ./.circleci/build-install-run.sh
            ./tools/pkg-update.sh
            ./tools/pkg-install.sh curl  # for server-test.sh
            ./.circleci/build-install-run.sh
  build_install_run__python_3_7_windowsservercore:
    docker:
      - image: python:3.7-windowsservercore
    steps:
      - checkout
      - run:
          name: build, install, and run in Python 3.7 on Windows Server Core
          command: |
            set -ex
            # force +x
            chmod -v +x -- ./tools/pkg-update.sh ./tools/pkg-install.sh ./.circleci/build-install-run.sh
            ./tools/pkg-update.sh
            ./tools/pkg-install.sh curl  # for server-test.sh
            ./.circleci/build-install-run.sh
  build_install_run__python_3_6_slim_stretch:
    docker:
      - image: python:3.6-slim-stretch
    steps:
      - checkout
      - run:
          name: build, install, and run in Python 3.6 on Debian Stretch
          command: |
            set -ex
            # force +x
            chmod -v +x -- ./tools/pkg-update.sh ./tools/pkg-install.sh ./.circleci/build-install-run.sh
            ./tools/pkg-update.sh
            ./tools/pkg-install.sh curl  # for server-test.sh
            ./.circleci/build-install-run.sh
  build_install_run__python_3_6_slim_buster:
    docker:
      - image: python:3.6-slim-buster
    steps:
      - checkout
      - run:
          name: build, install, and run in Python 3.6 on Debian Buster
          command: |
            set -ex
            # force +x
            chmod -v +x -- ./tools/pkg-update.sh ./tools/pkg-install.sh ./.circleci/build-install-run.sh
            ./tools/pkg-update.sh
            ./tools/pkg-install.sh curl  # for server-test.sh
            ./.circleci/build-install-run.sh
  build_install_run__python_3_6_alpine:
    docker:
      - image: python:3-alpine
    steps:
      - checkout
      - run:
          name: build, install, and run in Python 3 on Alpine Linux
          command: |
            set -ex
            # some pip build processes complain if this is not in the $PATH
            export PATH=${PATH}:/root/.local/bin
            # force +x
            chmod -v +x -- ./tools/pkg-update.sh ./tools/pkg-install.sh ./.circleci/build-install-run.sh
            ./tools/pkg-update.sh
            ./tools/pkg-install.sh bash  # for build-install-run.sh
            ./tools/pkg-install.sh curl  # for server-test.sh
            # for pip install of 'twine' (builds many libraries)
            ./tools/pkg-install.sh gcc python3-dev musl-dev libffi-dev openssl-dev
            ./.circleci/build-install-run.sh
workflows:
  version: 2
  #filters:
  #  branches:
  #    only:
  #      - master
  workflow_py:
    jobs:
      - build_install_run__circleci_python_3_5
      - build_install_run__circleci_python_3_6
      - build_install_run__circleci_python_3_7
      - build_install_run__python_3_6_alpine
      #- build_install_run__python_3_7_windowsservercore
      - build_install_run__python_3_6_slim_stretch
      - build_install_run__python_3_6_slim_buster
